---
- name: create shared volume for ovn control plane processes
  command: docker volume create --name ovn-run
  when:
    - inventory_hostname in groups['ovn-control']

- name: start OVN northbound database
  docker:
    name: ovn-north-database
    image: "{{ ovn_db_image_full }}"
    pull: always
    privileged: yes
    net: host
    detach: True
    state: started
    cpu_set: "{{ north_db_cpu_set }}"
    command: "ovn-sandbox-north-ovsdb.sh {{ ovn_database_alias_ip}} {{ ovn_database_device }}"
    volumes:
      - ovn-run:/usr/local/var/run/openvswitch/
  when:
    - inventory_hostname in groups['ovn-control']

- name: start OVN southbound database
  docker:
    name: ovn-south-database
    image: "{{ ovn_db_image_full }}"
    pull: always
    privileged: yes
    net: host
    detach: True
    state: started
    cpu_set: "{{ south_db_cpu_set }}"
    command: "ovn-sandbox-south-ovsdb.sh {{ ovn_database_alias_ip}} {{ ovn_database_device }}"
    volumes:
      - ovn-run:/usr/local/var/run/openvswitch/
  when:
    - inventory_hostname in groups['ovn-control']

- name: start OVN northd
  docker:
    name: ovn-northd
    image: "{{ ovn_db_image_full }}"
    pull: always
    privileged: yes
    net: host
    detach: True
    state: started
    cpu_set: "{{ northd_cpu_set }}"
    command: "ovn-sandbox-northd.sh {{ ovn_database_alias_ip}} {{ ovn_database_device }}"
    volumes:
      - ovn-run:/usr/local/var/run/openvswitch/
  when:
    - inventory_hostname in groups['ovn-control']

- name: start OVN northd
  docker:
    name: ovn-northd
    image: "{{ ovn_db_image_full }}"
    pull: always
    privileged: yes
    net: host
    detach: True
    state: started
    cpu_set: "{{ northd_cpu_set }}"
    command: "ovn-sandbox-northd.sh {{ ovn_database_alias_ip}} {{ ovn_database_device }}"
    volumes:
      - ovn-run:/usr/local/var/run/openvswitch/
  when:
    - inventory_hostname in groups['ovn-database']

- name: create shared volume for ovn chassis processes
  command: docker volume create --name sandbox-{{ item }}
  with_items:
    - "{{ dmi_data['ip_index_list'] }}"
  when:
    - inventory_hostname in groups['emulation-hosts']

- name: start OVN chassis
  docker:
    name: "sandbox-{{ item.1 }}"
    image: "{{ ovn_db_image_full }}"
    pull: always
    privileged: yes
    net: host
    detach: True
    state: started
    command: "ovn_set_chassis {{ ovn_database_alias_ip}} {{ item.1 }}/{{ dmi_data['prefixlen'] }} {{ ovn_database_device }}"
    volumes:
      - sandbox-{{ item.1 }}:/usr/local/var/
  delegate_to: "{{ groups['emulation-hosts'][ item.0 ] }}"
  with_together:
        - "{{ dmi_data['ip_index'] }}"
        - "{{ dmi_data['ip_index_list'] }}"
  when:
    - inventory_hostname in groups['emulation-hosts']
  ignore_errors: yes
